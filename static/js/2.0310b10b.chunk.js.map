{"version":3,"sources":["components/footer.js","components/level.js","utils/hooks.js","components/tooltips.js","components/minigraph.js","components/maplegend.js","components/choropleth.js","components/mapexplorer.js","components/timeseries.js","components/timeseriesexplorer.js"],"names":["React","memo","props","t","useTranslation","className","style","animationDelay","href","target","rel","justifyContent","useState","data","setData","useEffectOnce","active","confirmed","recovered","deaths","deltaconfirmed","deltadeaths","deltarecovered","isNaN","formatNumber","useResizeObserver","ref","dimensions","setDimensions","useEffect","observeTarget","current","resizeObserver","ResizeObserver","entries","observer","forEach","entry","index","contentRect","observe","unobserve","testedToolTip","onClick","e","stopPropagation","data-for","data-tip","data-event","data-event-off","id","place","type","effect","multiline","scrollHide","globalEventOff","timeseries","timeSeriesData","setTimeSeriesData","svgRef1","useRef","svgRef2","svgRef3","svgRef4","slice","length","graphData","useCallback","margin","chartRight","chartBottom","svg1","d3","svg2","svg3","svg4","d","dailyconfirmed","dailyrecovered","dailydeceased","xScale","domain","date","range","svgArray","dataTypes","colors","dailyMin","dailyactive","dailyMax","Math","max","domainMinMax","yScale","svg","i","color","path","append","datum","attr","x","y","curve","totalLength","node","getTotalLength","transition","delay","duration","selectAll","enter","on","width","height","viewBox","preserveAspectRatio","MapLegend","mapScale","statistic","mapStatistic","mapOption","svgRef","wrapperRef","getBoundingClientRect","MAP_STATISTICS","ZONE","call","legend","tickValues","marginLeft","marginRight","ordinalWeights","Object","values","HOTSPOTS","select","remove","domainMax","join","copy","tickSize","tickPadding","tickFormat","g","title","capitalizeAll","PER_MILLION","ticks","n","TOTAL","Number","isInteger","position","marginTop","marginBottom","tickAdjust","interpolate","min","rangeRound","ramp","toDataURL","interpolator","assign","undefined","round","map","invertExtent","thresholds","quantiles","thresholdFormat","widthScale","reduce","a","b","xPos","w","acc","bandwidth","text","canvas","context","getContext","fillStyle","fillRect","caseColor","caseType","alpha","ChoroplethMap","mapData","currentMap","changeMap","regionHighlighted","setRegionHighlighted","isCountryLoaded","mapMeta","MAP_META","name","geoDataResponse","useSWR","geoDataFile","file","useMemo","stat","clamp","nice","colorInterpolator","geoData","topology","topojson","objects","graphObjectStates","graphObjectDistricts","widthDefault","heightDefault","projection","fitWidth","fitSize","bBox","bounds","split","features","view","MAP_VIEWS","STATES","f","district","properties","state","st_nm","obj","onceTouchedRegion","regionSelection","sel","region","mapType","MAP_TYPES","STATE","this","parseFloat","total","toFixed","toString","circlesData","value","Unknown","sort","centroid","meshStates","COUNTRY","meshDistricts","DISTRICTS","highlightRegionInMap","each","highlighted","parentNode","appendChild","Fragment","colorInterpolationFilters","getRegionFromState","mapName","states","districts","zones","stateTestData","anchor","setAnchor","setMapOption","setCurrentMap","currentMapMeta","currentMapData","dtype","keys","acc1","acc2","zone","typeCount","parseInt","STATE_POPULATIONS","districtWiseData","districtData","Total","stateData","find","getRegionFromDistrict","hoveredRegion","panelRegion","hoveredRegionCount","hoveredRegionZone","switchMapToState","newMapMeta","topDistrict","filter","ReactDOM","unstable_batchedUpdates","testObj","display","window","innerWidth","action","totaltested","parse","updatedon","Date","formatDayMonth","source","lastupdatedtime","formatDate","formatLastUpdated","to","STATE_CODES_REVERSE","prevProps","currProps","equal","timeseriesProp","chartType","mode","logMode","stateCode","Infinity","lastDaysCount","setLastDaysCount","setTimeseries","datapoint","setDatapoint","setIndex","moving","setMoving","svgRef5","transformTimeSeries","slicedTimeseries","sliceTimeseriesFromEnd","T","yScales","svg5","dateMin","subDays","dateMax","addDays","numTicksX","xAxis","tick","formatTimeseriesTickX","xAxis2","yAxis","plotTotal","dataTypesTotal","dataTypesDaily","uniformScaleMin","totalactive","totalrecovered","totaldeceased","uniformScaleMax","totalconfirmed","yScaleUniformLinear","yScaleUniformLog","yScaleLinear","yScaleLog","yScaleDailyUniform","focus","mousemove","xm","invert","bisectDate","left","j","mouseout","typeTotal","typeDaily","filteredTimeseries","reverse","p","getPointAtLength","repeat","dateStr","formatTimeseriesDate","chartKey1","chartKey2","chartKey3","chartKey4","chartKey5","currentStatusCount","currentDiff","formatedDiff","aria-label","isIntersecting","activeStateCode","onHighlightState","useLocalStorage","setChartType","isTimeseriesIntersecting","setIsTimeseriesIntersecting","timeseriesMode","setTimeseriesMode","timeseriesLogMode","setTimeseriesLogMode","options","rootMargin","onChange","htmlFor","checked","event","disabled","selectedState","selectedOptions","getAttribute","JSON","s","statecode","key","statedata","stringify"],"mappings":"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","file":"static/js/2.0310b10b.chunk.js","sourcesContent":["import React from 'react';\nimport * as Icon from 'react-feather';\nimport {useTranslation} from 'react-i18next';\n\nfunction Footer(props) {\n  const {t} = useTranslation();\n\n  return (\n    <footer className=\"fadeInUp\" style={{animationDelay: '2s'}}>\n      <h5>{t('We stand with everyone fighting on the frontlines')}</h5>\n\n      <div className=\"link\">\n        <a\n          href=\"https://github.com/covid19india\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          covid19india\n        </a>\n      </div>\n\n      <a\n        href=\"https://github.com/covid19india/covid19india-react\"\n        className=\"button github\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <Icon.GitHub />\n        <span>{t('Open Sourced on GitHub')}</span>\n      </a>\n\n      <a\n        className=\"button excel\"\n        href=\"http://patientdb.covid19india.org\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <Icon.Database />\n        <span>{t('Crowdsourced Patient Database')}</span>\n      </a>\n\n      <a\n        href=\"https://twitter.com/covid19indiaorg\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        className=\"button twitter\"\n        style={{justifyContent: 'center'}}\n      >\n        <Icon.Twitter />\n        <span>{t('View updates on Twitter')}</span>\n      </a>\n\n      <a\n        href=\"https://bit.ly/covid19crowd\"\n        className=\"button telegram\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <Icon.MessageCircle />\n        <span>{t('Join Telegram to Collaborate!')}</span>\n      </a>\n    </footer>\n  );\n}\n\nexport default React.memo(Footer);\n","import {formatNumber} from '../utils/commonfunctions';\n\nimport React, {useState} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {useEffectOnce} from 'react-use';\n\nfunction Level(props) {\n  const [data, setData] = useState(props.data);\n  const {t} = useTranslation();\n\n  useEffectOnce(() => {\n    setData({\n      active: +props.data.active,\n      confirmed: +props.data.confirmed,\n      recovered: +props.data.recovered,\n      deaths: +props.data.deaths,\n      deltaconfirmed: +props.data.deltaconfirmed,\n      deltadeaths: +props.data.deltadeaths,\n      deltarecovered: +props.data.deltarecovered,\n    });\n  });\n\n  return (\n    <div className=\"Level\">\n      <div\n        className=\"level-item is-cherry fadeInUp\"\n        style={{animationDelay: '1s'}}\n      >\n        <h5>{t('Confirmed')}</h5>\n        <h4>\n          [\n          {isNaN(data.deltaconfirmed)\n            ? ''\n            : data.deltaconfirmed > 0\n            ? '+' + formatNumber(data.deltaconfirmed)\n            : '+0'}\n          ]\n        </h4>\n        <h1>{formatNumber(data.confirmed)} </h1>\n      </div>\n\n      <div\n        className=\"level-item is-blue fadeInUp\"\n        style={{animationDelay: '1.1s'}}\n      >\n        <h5 className=\"heading\">{t('Active')}</h5>\n        <h4>&nbsp;</h4>\n        <h1 className=\"title has-text-info\">{formatNumber(data.active)}</h1>\n      </div>\n\n      <div\n        className=\"level-item is-green fadeInUp\"\n        style={{animationDelay: '1.2s'}}\n      >\n        <h5 className=\"heading\">{t('Recovered')}</h5>\n        <h4>\n          [\n          {isNaN(data.deltarecovered)\n            ? ''\n            : data.deltarecovered > 0\n            ? '+' + formatNumber(data.deltarecovered)\n            : '+0'}\n          ]\n        </h4>\n        <h1 className=\"title has-text-success\">\n          {formatNumber(data.recovered)}{' '}\n        </h1>\n      </div>\n\n      <div\n        className=\"level-item is-gray fadeInUp\"\n        style={{animationDelay: '1.3s'}}\n      >\n        <h5 className=\"heading\">{t('Deceased')}</h5>\n        <h4>\n          [\n          {isNaN(data.deltadeaths)\n            ? ''\n            : data.deltadeaths > 0\n            ? '+' + formatNumber(data.deltadeaths)\n            : '+0'}\n          ]\n        </h4>\n        <h1 className=\"title has-text-grey\">{formatNumber(data.deaths)}</h1>\n      </div>\n    </div>\n  );\n}\n\nexport default React.memo(Level);\n","import {ResizeObserver} from '@juggle/resize-observer';\nimport {useState, useEffect} from 'react';\n\nexport const useResizeObserver = (ref) => {\n  const [dimensions, setDimensions] = useState(null);\n  useEffect(() => {\n    const observeTarget = ref.current;\n    const resizeObserver = new ResizeObserver((entries, observer) => {\n      entries.forEach((entry, index) => {\n        setDimensions(entry.contentRect);\n      });\n    });\n    resizeObserver.observe(observeTarget);\n    return () => {\n      resizeObserver.unobserve(observeTarget);\n    };\n  }, [ref]);\n  return dimensions;\n};\n","import React from 'react';\nimport * as Icon from 'react-feather';\nimport ReactTooltip from 'react-tooltip';\n\nexport const testedToolTip = (\n  <span className=\"tooltip-tested\" onClick={(e) => e.stopPropagation()}>\n    <Icon.Info\n      data-for=\"tested\"\n      data-tip=\"Reporting total samples tested from ICMR data\"\n      data-event=\"touchstart mouseover\"\n      data-event-off=\"mouseleave\"\n    />\n    <ReactTooltip\n      id=\"tested\"\n      place=\"top\"\n      type=\"dark\"\n      effect=\"solid\"\n      multiline={true}\n      scrollHide={true}\n      globalEventOff=\"click\"\n    />\n  </span>\n);\n","import * as d3 from 'd3';\nimport React, {useState, useEffect, useRef, useCallback} from 'react';\n\nfunction Minigraph({timeseries}) {\n  const [timeSeriesData, setTimeSeriesData] = useState([]);\n  const svgRef1 = useRef();\n  const svgRef2 = useRef();\n  const svgRef3 = useRef();\n  const svgRef4 = useRef();\n\n  useEffect(() => {\n    setTimeSeriesData(timeseries.slice(timeseries.length - 20));\n  }, [timeseries]);\n\n  const graphData = useCallback((data) => {\n    if (data.length <= 1) return 0;\n\n    const margin = {top: 10, right: 5, bottom: 20, left: 5};\n    const chartRight = 100 - margin.right;\n    const chartBottom = 100 - margin.bottom;\n\n    const svg1 = d3.select(svgRef1.current);\n    const svg2 = d3.select(svgRef2.current);\n    const svg3 = d3.select(svgRef3.current);\n    const svg4 = d3.select(svgRef4.current);\n\n    data.forEach((d) => {\n      d['dailyactive'] = d.dailyconfirmed - d.dailyrecovered - d.dailydeceased;\n    });\n\n    const xScale = d3\n      .scaleTime()\n      .domain(d3.extent(data, (d) => d.date))\n      .range([margin.left, chartRight]);\n\n    const svgArray = [svg1, svg2, svg3, svg4];\n    const dataTypes = [\n      'dailyconfirmed',\n      'dailyactive',\n      'dailyrecovered',\n      'dailydeceased',\n    ];\n    const colors = ['#ff073a', '#007bff', '#28a745', '#6c757d'];\n\n    const dailyMin = d3.min(data, (d) => d.dailyactive);\n    const dailyMax = d3.max(data, (d) =>\n      Math.max(d.dailyconfirmed, d.dailyrecovered, d.dailydeceased)\n    );\n    const domainMinMax = Math.max(-dailyMin, dailyMax);\n\n    const yScale = d3\n      .scaleLinear()\n      .domain([-domainMinMax, domainMinMax])\n      .range([chartBottom, margin.top]);\n\n    svgArray.forEach((svg, i) => {\n      const type = dataTypes[i];\n      const color = colors[i];\n\n      const path = svg\n        .append('path')\n        .datum(data)\n        .attr('fill', 'none')\n        .attr('stroke', color + '99')\n        .attr('stroke-width', 2.5)\n        .attr('cursor', 'pointer')\n        .attr(\n          'd',\n          d3\n            .line()\n            .x((d) => xScale(d.date))\n            .y((d) => yScale(d[type]))\n            .curve(d3.curveCardinal)\n        );\n\n      const totalLength = path.node().getTotalLength();\n      path\n        .attr('stroke-dasharray', totalLength + ' ' + totalLength)\n        .attr('stroke-dashoffset', totalLength)\n        .transition()\n        .delay(500)\n        .duration(2500)\n        .attr('stroke-dashoffset', 0);\n\n      svg\n        .selectAll('.dot')\n        .data(data.slice(data.length - 1))\n        .enter()\n        .append('circle')\n        .attr('fill', color)\n        .attr('stroke', color)\n        .attr('r', 2)\n        .attr('cursor', 'pointer')\n        .attr('cx', (d) => xScale(d.date))\n        .attr('cy', (d) => yScale(d[type]))\n        .on('mouseover', (d) => {\n          d3.select(d3.event.target).attr('r', '5');\n        })\n        .on('mouseout', (d) => {\n          d3.select(d3.event.target).attr('r', '2');\n        })\n        .style('opacity', 0)\n        .transition()\n        .delay(500)\n        .duration(2500)\n        .style('opacity', 1);\n    });\n  }, []);\n\n  useEffect(() => {\n    graphData(timeSeriesData);\n  }, [timeSeriesData, graphData]);\n\n  return (\n    <div className=\"Minigraph\">\n      <div className=\"svg-parent fadeInUp\" style={{animationDelay: '1.4s'}}>\n        <svg\n          ref={svgRef1}\n          width=\"100\"\n          height=\"75\"\n          viewBox=\"0 0 100 75\"\n          preserveAspectRatio=\"xMidYMid meet\"\n        />\n      </div>\n\n      <div\n        className=\"svg-parent is-blue fadeInUp\"\n        style={{animationDelay: '1.5s'}}\n      >\n        <svg\n          ref={svgRef2}\n          width=\"100\"\n          height=\"75\"\n          viewBox=\"0 0 100 75\"\n          preserveAspectRatio=\"xMidYMid meet\"\n        />\n      </div>\n\n      <div\n        className=\"svg-parent is-green fadeInUp\"\n        style={{animationDelay: '1.6s'}}\n      >\n        <svg\n          ref={svgRef3}\n          width=\"100\"\n          height=\"75\"\n          viewBox=\"0 0 100 75\"\n          preserveAspectRatio=\"xMidYMid meet\"\n        />\n      </div>\n\n      <div\n        className=\"svg-parent is-gray fadeInUp\"\n        style={{animationDelay: '1.7s'}}\n      >\n        <svg\n          ref={svgRef4}\n          width=\"100\"\n          height=\"75\"\n          viewBox=\"0 0 100 75\"\n          preserveAspectRatio=\"xMidYMid meet\"\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default React.memo(Minigraph);\n","import {MAP_STATISTICS} from '../constants';\nimport {capitalizeAll, formatNumber} from '../utils/commonfunctions';\nimport {useResizeObserver} from '../utils/hooks';\n\nimport * as d3 from 'd3';\nimport React, {useEffect, useRef} from 'react';\n\nfunction MapLegend({mapScale, statistic, mapStatistic, mapOption}) {\n  const svgRef = useRef(null);\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n\n  useEffect(() => {\n    const svg = d3.select(svgRef.current);\n    const {width, height} =\n      dimensions || wrapperRef.current.getBoundingClientRect();\n\n    if (mapStatistic === MAP_STATISTICS.ZONE) {\n      svg.call(() =>\n        legend({\n          svg: svg,\n          color: mapScale,\n          width: width,\n          height: height,\n          tickValues: [],\n          marginLeft: 2,\n          marginRight: 20,\n          ordinalWeights: Object.values(statistic),\n        })\n      );\n    } else if (mapStatistic === MAP_STATISTICS.HOTSPOTS) {\n      const t = svg.transition().duration(500);\n      svg\n        .select('.ramp')\n        .transition(t)\n        .attr('opacity', 0)\n        .attr('xlink:href', null);\n\n      svg\n        .select('.bars')\n        .selectAll('rect')\n        .transition(t)\n        .attr('opacity', 0)\n        .remove();\n      svg.selectAll('.axis > *').remove();\n\n      const domainMax = mapScale.domain()[1];\n\n      const legend = svg\n        .select('.circles')\n        .attr('transform', `translate(48,40)`)\n        .attr('text-anchor', 'middle');\n\n      legend\n        .selectAll('circle')\n        .data([domainMax / 10, (domainMax * 2) / 5, domainMax])\n        .join('circle')\n        .attr('fill', 'none')\n        .attr('stroke', '#ccc')\n        .transition(t)\n        .attr('cy', (d) => -mapScale(d))\n        .attr('r', mapScale);\n\n      const yScale = mapScale.copy().range([0, -2 * mapScale(domainMax)]);\n\n      svg\n        .select('.circleAxis')\n        .attr('transform', `translate(48,50)`)\n        .transition(t)\n        .call(\n          d3\n            .axisRight(yScale)\n            .tickSize(0)\n            .tickPadding(0)\n            .tickValues([domainMax / 10, (domainMax * 2) / 5, domainMax])\n            .tickFormat(d3.format('0~s'))\n        )\n        .selectAll('.tick text')\n        .style('text-anchor', 'middle');\n\n      svg.select('.circleAxis').call((g) => g.select('.domain').remove());\n    } else {\n      svg.call(() =>\n        legend({\n          svg: svg,\n          color: mapScale,\n          title:\n            capitalizeAll(mapOption) +\n            (mapStatistic === MAP_STATISTICS.PER_MILLION\n              ? ' cases per million'\n              : ' cases'),\n          width: width,\n          height: height,\n          ticks: 5,\n          tickFormat: function (d, i, n) {\n            if (mapStatistic === MAP_STATISTICS.TOTAL && !Number.isInteger(d))\n              return;\n            if (i === n.length - 1) return formatNumber(d) + '+';\n            return formatNumber(d);\n          },\n          marginLeft: 2,\n          marginRight: 20,\n        })\n      );\n    }\n    svg.attr('class', mapStatistic === MAP_STATISTICS.ZONE ? 'zone' : '');\n  });\n\n  return (\n    <div\n      className=\"svg-parent maplegend fadeInUp\"\n      style={{animationDelay: '2.5s', height: 50}}\n      ref={wrapperRef}\n    >\n      <svg id=\"legend\" preserveAspectRatio=\"xMidYMid meet\" ref={svgRef}>\n        <image className=\"ramp\" />\n        <g className=\"bars\"></g>\n        <g className=\"circles\"></g>\n        <g className=\"circleAxis\"></g>\n        <g className=\"axis\">\n          <text className=\"axistext\" />\n        </g>\n      </svg>\n      <canvas\n        className=\"color-scale\"\n        style={{position: 'absolute', height: 0}}\n      />\n    </div>\n  );\n}\n\nexport default MapLegend;\n\nfunction legend({\n  svg,\n  color,\n  title,\n  tickSize = 6,\n  width = 320,\n  height = 44 + tickSize,\n  marginTop = 18,\n  marginRight = 0,\n  marginBottom = 16 + tickSize,\n  marginLeft = 0,\n  ticks = width / 64,\n  tickFormat,\n  tickValues,\n  ordinalWeights,\n} = {}) {\n  svg.selectAll('.circles > *').remove();\n  svg.selectAll('.circleAxis > *').remove();\n  const t = svg.transition().duration(500);\n\n  let tickAdjust = (g) => {\n    const ticks = g.selectAll('.tick line');\n    ticks.attr('y1', marginTop + marginBottom - height);\n    // d3.select(ticks.nodes()[ticks.size() - 1]).remove();\n  };\n  let x;\n\n  // Continuous\n  if (color.interpolate) {\n    const n = Math.min(color.domain().length, color.range().length);\n\n    x = color\n      .copy()\n      .rangeRound(\n        d3.quantize(d3.interpolate(marginLeft, width - marginRight), n)\n      );\n\n    svg\n      .select('.ramp')\n      .attr('class', 'ramp')\n      .attr('x', marginLeft)\n      .attr('y', marginTop)\n      .attr('width', width - marginLeft - marginRight)\n      .attr('height', height - marginTop - marginBottom)\n      .attr('preserveAspectRatio', 'none')\n      .attr(\n        'xlink:href',\n        ramp(\n          color.copy().domain(d3.quantize(d3.interpolate(0, 1), n))\n        ).toDataURL()\n      );\n  }\n\n  // Sequential\n  else if (color.interpolator) {\n    svg\n      .select('.bars')\n      .selectAll('rect')\n      .transition(t)\n      .attr('opacity', 0)\n      .remove();\n\n    x = Object.assign(\n      color\n        .copy()\n        .interpolator(d3.interpolateRound(marginLeft, width - marginRight)),\n      {\n        range() {\n          return [marginLeft, width - marginRight];\n        },\n      }\n    );\n\n    svg\n      .select('.ramp')\n      .attr('class', 'ramp')\n      .attr('x', marginLeft)\n      .attr('y', marginTop)\n      .attr('width', width - marginLeft - marginRight)\n      .attr('height', height - marginTop - marginBottom)\n      .attr('preserveAspectRatio', 'none')\n      .attr('xlink:href', ramp(color.interpolator()).toDataURL())\n      .transition(t)\n      .attr('opacity', 1);\n\n    // scaleSequentialQuantile doesn’t implement ticks or tickFormat.\n    if (!x.ticks) {\n      if (tickValues === undefined) {\n        const n = Math.round(ticks + 1);\n        tickValues = d3\n          .range(n)\n          .map((i) => d3.quantile(color.domain(), i / (n - 1)));\n      }\n      if (typeof tickFormat !== 'function') {\n        tickFormat = d3.format(tickFormat === undefined ? ',f' : tickFormat);\n      }\n    }\n  }\n\n  // Threshold\n  else if (color.invertExtent) {\n    const thresholds = color.thresholds\n      ? color.thresholds() // scaleQuantize\n      : color.quantiles\n      ? color.quantiles() // scaleQuantile\n      : color.domain(); // scaleThreshold\n\n    const thresholdFormat =\n      tickFormat === undefined\n        ? (d) => d\n        : typeof tickFormat === 'string'\n        ? d3.format(tickFormat)\n        : tickFormat;\n\n    x = d3\n      .scaleLinear()\n      .domain([-1, color.range().length - 1])\n      .rangeRound([marginLeft, width - marginRight]);\n\n    svg\n      .append('g')\n      .selectAll('rect')\n      .data(color.range())\n      .join('rect')\n      .attr('x', (d, i) => x(i - 1))\n      .attr('y', marginTop)\n      .attr('width', (d, i) => x(i) - x(i - 1))\n      .attr('height', height - marginTop - marginBottom)\n      .attr('fill', (d) => d);\n\n    tickValues = d3.range(-1, thresholds.length);\n    tickFormat = (i) => {\n      if (i === -1) return thresholdFormat(1);\n      else if (i === thresholds.length - 1) return;\n      else if (i === thresholds.length - 2)\n        return thresholdFormat(thresholds[i] + '+', i);\n      return thresholdFormat(thresholds[i], i);\n    };\n  }\n\n  // Ordinal\n  else {\n    svg\n      .select('.ramp')\n      .transition(t)\n      .attr('opacity', 0)\n      .attr('xlink:href', null);\n    if (!ordinalWeights) {\n      x = d3\n        .scaleBand()\n        .domain(color.domain())\n        .rangeRound([marginLeft, width - marginRight]);\n      svg\n        .selectAll('rect')\n        .data(color.domain())\n        .join('rect')\n        .attr('x', x)\n        .attr('y', marginTop)\n        .attr('width', Math.max(0, x.bandwidth() - 1))\n        .attr('height', height - marginTop - marginBottom)\n        .attr('fill', color);\n    } else {\n      const widthScale = d3\n        .scaleLinear()\n        .domain([0, ordinalWeights.reduce((a, b) => a + b)])\n        .rangeRound([0, width - marginLeft - marginRight]);\n\n      const xPos = ordinalWeights.map((w, i) =>\n        ordinalWeights\n          .slice(0, i)\n          .reduce((acc, w) => acc + widthScale(w), marginLeft)\n      );\n\n      x = d3.scaleOrdinal().domain(color.domain()).range(xPos);\n\n      svg\n        .select('.bars')\n        .selectAll('rect')\n        .data(color.domain())\n        .join((enter) =>\n          enter\n            .append('rect')\n            .attr('x', x)\n            .attr('width', (d, i) => widthScale(ordinalWeights[i]))\n        )\n        .attr('y', marginTop)\n        .attr('height', height - marginTop - marginBottom)\n        .attr('fill', color)\n        .transition(t)\n        .attr('x', x)\n        .attr('width', (d, i) => widthScale(ordinalWeights[i]))\n        .attr('opacity', 1);\n    }\n\n    tickAdjust = () => {};\n  }\n\n  svg\n    .select('.axis')\n    .attr('transform', `translate(0,${height - marginBottom})`)\n    .transition(t)\n    .attr('class', 'axis')\n    .call(\n      d3\n        .axisBottom(x)\n        .ticks(ticks, typeof tickFormat === 'string' ? tickFormat : undefined)\n        .tickFormat(typeof tickFormat === 'function' ? tickFormat : undefined)\n        .tickSize(tickSize)\n        .tickValues(tickValues)\n    )\n    .on('start', () => {\n      svg.call(tickAdjust).call((svg) => svg.select('.domain').remove());\n    })\n    .call((g) =>\n      g\n        .select('.axistext')\n        .attr('class', 'axistext')\n        .attr('x', marginLeft)\n        .attr('y', marginTop + marginBottom - height - 6)\n        .attr('fill', 'currentColor')\n        .attr('text-anchor', 'start')\n        .attr('font-weight', 'bold')\n        .text(title)\n    );\n\n  return svg.node();\n}\n\nfunction ramp(color, n = 256) {\n  // const canvas = document.createElement('canvas');\n  const canvas = d3.select('.color-scale').node();\n  const context = ((canvas.width = n), (canvas.height = 1), canvas).getContext(\n    '2d'\n  );\n  for (let i = 0; i < n; ++i) {\n    context.fillStyle = color(i / (n - 1));\n    context.fillRect(i, 0, 1, 1);\n  }\n  return canvas;\n}\n","import MapLegend from './maplegend';\n\nimport {MAP_META, MAP_STATISTICS, MAP_TYPES, MAP_VIEWS} from '../constants';\nimport {capitalizeAll} from '../utils/commonfunctions';\n\nimport * as d3 from 'd3';\nimport React, {useCallback, useEffect, useMemo, useRef} from 'react';\nimport * as Icon from 'react-feather';\nimport {useTranslation} from 'react-i18next';\nimport useSWR from 'swr';\nimport * as topojson from 'topojson';\n\nconst colorInterpolator = (caseType, t) => {\n  switch (caseType) {\n    case 'confirmed':\n      return d3.interpolateReds(t * 0.85);\n    case 'active':\n      return d3.interpolateBlues(t * 0.85);\n    case 'recovered':\n      return d3.interpolateGreens(t * 0.85);\n    case 'deceased':\n      return d3.interpolateGreys(t * 0.85);\n    default:\n      return;\n  }\n};\n\nconst caseColor = (caseType, alpha = '') => {\n  switch (caseType) {\n    case 'confirmed':\n      return '#ff073a' + alpha;\n    case 'active':\n      return '#007bff' + alpha;\n    case 'recovered':\n      return '#28a745' + alpha;\n    case 'deceased':\n      return '#6c757d' + alpha;\n    default:\n      return;\n  }\n};\n\nfunction ChoroplethMap({\n  statistic,\n  mapData,\n  currentMap,\n  changeMap,\n  regionHighlighted,\n  setRegionHighlighted,\n  mapOption,\n  isCountryLoaded,\n}) {\n  const {t} = useTranslation();\n  const svgRef = useRef(null);\n\n  const mapMeta = MAP_META[currentMap.name];\n  const geoDataResponse = useSWR(mapMeta.geoDataFile, async (file) => {\n    return await d3.json(file);\n  });\n\n  const mapScale = useMemo(() => {\n    if (currentMap.stat === MAP_STATISTICS.ZONE) {\n      return d3.scaleOrdinal(\n        ['Red', 'Orange', 'Green'],\n        ['#d73027', '#fee08b', '#66bd63']\n      );\n    } else if (currentMap.stat === MAP_STATISTICS.HOTSPOTS) {\n      const {width} = svgRef.current.getBoundingClientRect();\n      return d3\n        .scaleSqrt([0, statistic[mapOption].max], [0, width / 10])\n        .clamp(true)\n        .nice(3);\n    } else {\n      return d3\n        .scaleSequential([0, Math.max(1, statistic[mapOption].max)], (t) =>\n          colorInterpolator(mapOption, t)\n        )\n        .clamp(true);\n    }\n  }, [currentMap.stat, statistic, mapOption]);\n\n  useEffect(() => {\n    if (!geoDataResponse.data) return;\n    const geoData = geoDataResponse.data;\n\n    const topology = topojson.feature(\n      geoData,\n      geoData.objects[mapMeta.graphObjectStates || mapMeta.graphObjectDistricts]\n    );\n\n    const svg = d3.select(svgRef.current);\n\n    if (!svg.attr('viewBox')) {\n      const {\n        width: widthDefault,\n        height: heightDefault,\n      } = svgRef.current.getBoundingClientRect();\n      const projection = isCountryLoaded\n        ? d3.geoMercator().fitWidth(widthDefault, topology)\n        : d3.geoMercator().fitSize([widthDefault, heightDefault], topology);\n      const path = d3.geoPath(projection);\n      const bBox = path.bounds(topology);\n      const [width, height] = [+bBox[1][0], bBox[1][1]];\n      svg.attr('viewBox', `0 0 ${width} ${height}`);\n    }\n    const bBox = svg.attr('viewBox').split(' ');\n    const [width, height] = [+bBox[2], +bBox[3]];\n\n    const projection = d3.geoMercator().fitSize([width, height], topology);\n    const path = d3.geoPath(projection);\n\n    // Add id to each feature\n    let features =\n      currentMap.stat !== MAP_STATISTICS.HOTSPOTS\n        ? currentMap.view === MAP_VIEWS.STATES\n          ? topojson.feature(\n              geoData,\n              geoData.objects[mapMeta.graphObjectStates]\n            ).features\n          : topojson.feature(\n              geoData,\n              geoData.objects[mapMeta.graphObjectDistricts]\n            ).features\n        : [\n            ...topojson.feature(\n              geoData,\n              geoData.objects[mapMeta.graphObjectStates]\n            ).features,\n            ...topojson.feature(\n              geoData,\n              geoData.objects[mapMeta.graphObjectDistricts]\n            ).features,\n          ];\n\n    features = features.map((f) => {\n      const district = f.properties.district;\n      const state = f.properties.st_nm;\n      const obj = Object.assign({}, f);\n      obj.id = `${currentMap.name}-${state}${district ? '-' + district : ''}`;\n      return obj;\n    });\n\n    /* Draw map */\n    const t = d3.transition().duration(500);\n    let onceTouchedRegion = null;\n    const regionSelection = svg\n      .select('.regions')\n      .selectAll('path')\n      .data(\n        currentMap.stat !== MAP_STATISTICS.HOTSPOTS ? features : [],\n        (d) => d.id\n      )\n      .join((enter) => {\n        const sel = enter\n          .append('path')\n          .attr('d', path)\n          .attr('stroke-width', 2)\n          .attr('stroke-opacity', 0)\n          .style('cursor', 'pointer')\n          .on('mouseenter', (d) => {\n            const region = {state: d.properties.st_nm};\n            if (d.properties.district) region.district = d.properties.district;\n            setRegionHighlighted(region);\n          })\n          .on('mouseleave', (d) => {\n            if (onceTouchedRegion === d) onceTouchedRegion = null;\n          })\n          .on('touchstart', (d) => {\n            if (onceTouchedRegion === d) onceTouchedRegion = null;\n            else onceTouchedRegion = d;\n          })\n          .on('click', (d) => {\n            d3.event.stopPropagation();\n            if (onceTouchedRegion || mapMeta.mapType === MAP_TYPES.STATE)\n              return;\n            // Disable pointer events till the new map is rendered\n            svg.attr('pointer-events', 'none');\n            svg\n              .select('.regions')\n              .selectAll('path')\n              .attr('pointer-events', 'none');\n            // Switch map\n            changeMap(d.properties.st_nm);\n          });\n        sel.append('title');\n        return sel;\n      })\n      .attr('pointer-events', 'none');\n\n    regionSelection\n      .transition(t)\n      .attr('fill', (d) => {\n        let n;\n        if (currentMap.stat === MAP_STATISTICS.ZONE) {\n          const state = d.properties.st_nm;\n          const district = d.properties.district;\n          n =\n            mapData[state] && mapData[state][district]\n              ? mapData[state][district]\n              : 0;\n        } else {\n          const state = d.properties.st_nm;\n          const district = d.properties.district;\n          if (district)\n            n =\n              mapData[state] &&\n              mapData[state][district] &&\n              mapData[state][district][mapOption]\n                ? mapData[state][district][mapOption]\n                : 0;\n          else\n            n =\n              mapData[state] && mapData[state][mapOption]\n                ? mapData[state][mapOption]\n                : 0;\n        }\n        const color = n === 0 ? '#ffffff00' : mapScale(n);\n        return color;\n      })\n      .attr(\n        'stroke',\n        currentMap.stat === MAP_STATISTICS.ZONE\n          ? '#343a40'\n          : caseColor(mapOption)\n      )\n      .on('end', function () {\n        d3.select(this).attr('pointer-events', 'all');\n      });\n\n    regionSelection.select('title').text((d) => {\n      if (currentMap.stat === MAP_STATISTICS.TOTAL) {\n        const state = d.properties.st_nm;\n        const district = d.properties.district;\n        let n;\n        if (district)\n          n =\n            mapData[state] && mapData[state][district]\n              ? mapData[state][district][mapOption]\n              : 0;\n        else n = mapData[state] ? mapData[state][mapOption] : 0;\n        return (\n          Number(\n            parseFloat(\n              100 * (n / (statistic[mapOption].total || 0.001))\n            ).toFixed(2)\n          ).toString() +\n          '% from ' +\n          capitalizeAll(district ? district : state)\n        );\n      }\n    });\n\n    svg\n      .transition()\n      .duration(mapMeta.mapType === MAP_TYPES.STATE ? t.duration() / 2 : 0)\n      .on('end', () =>\n        svg.attr('class', currentMap.stat === MAP_STATISTICS.ZONE ? 'zone' : '')\n      );\n\n    /* ----------BUBBLE MAP----------*/\n    let circlesData = [];\n    if (currentMap.stat === MAP_STATISTICS.HOTSPOTS) {\n      circlesData = features\n        .map((d) => {\n          const district = d.properties.district;\n          const state = d.properties.st_nm;\n          if (district) {\n            d.value =\n              mapData[state] && mapData[state][district]\n                ? mapData[state][district][mapOption]\n                : 0;\n          } else {\n            d.value =\n              mapData[state] && mapData[state].Unknown\n                ? mapData[state].Unknown[mapOption]\n                : 0;\n          }\n          return d;\n        })\n        .sort((a, b) => b.value - a.value);\n    }\n\n    svg\n      .select('.circles')\n      .selectAll('circle')\n      .data(circlesData, (d) => d.id)\n      .join((enter) =>\n        enter\n          .append('circle')\n          .attr('transform', (d) => `translate(${path.centroid(d)})`)\n          .attr('fill-opacity', 0.5)\n          .style('cursor', 'pointer')\n          .attr('pointer-events', 'all')\n          .on('mouseenter', (d) => {\n            const region = {\n              state: d.properties.st_nm,\n              district: d.properties.district || 'Unknown',\n            };\n            setRegionHighlighted(region);\n          })\n          .on('click', () => {\n            d3.event.stopPropagation();\n          })\n      )\n      .transition(t)\n      .attr('fill', caseColor(mapOption, '70'))\n      .attr('stroke', caseColor(mapOption, '70'))\n      .attr('r', (d) => mapScale(d.value));\n    /* ------------------------------*/\n\n    let meshStates = [];\n    if (mapMeta.mapType === MAP_TYPES.COUNTRY) {\n      meshStates = [\n        topojson.mesh(geoData, geoData.objects[mapMeta.graphObjectStates]),\n      ];\n      meshStates[0].id = mapMeta.graphObjectStates;\n    }\n    let meshDistricts = [];\n    if (currentMap.view === MAP_VIEWS.DISTRICTS) {\n      // Add id to mesh\n      meshDistricts = [\n        topojson.mesh(geoData, geoData.objects[mapMeta.graphObjectDistricts]),\n      ];\n      meshDistricts[0].id = mapMeta.graphObjectDistricts;\n    }\n\n    svg\n      .select(\n        currentMap.view === MAP_VIEWS.STATES\n          ? '.state-borders'\n          : '.district-borders'\n      )\n      .attr('fill', 'none')\n      .attr('stroke-width', function () {\n        return mapMeta.mapType === MAP_TYPES.COUNTRY &&\n          currentMap.view === MAP_VIEWS.DISTRICTS\n          ? 0\n          : width / 250;\n      })\n      .selectAll('path')\n      .data(\n        currentMap.view === MAP_VIEWS.STATES ? meshStates : meshDistricts,\n        (d) => d.id\n      )\n      .join((enter) => enter.append('path').attr('d', path))\n      .transition(t)\n      .attr('stroke', () => {\n        if (currentMap.stat === MAP_STATISTICS.ZONE) {\n          return '#00000060';\n        } else {\n          return caseColor(mapOption, '30');\n        }\n      });\n\n    svg\n      .select(\n        currentMap.view === MAP_VIEWS.STATES\n          ? '.district-borders'\n          : '.state-borders'\n      )\n      .selectAll('path')\n      .data(\n        currentMap.view === MAP_VIEWS.STATES ? meshDistricts : meshStates,\n        (d) => d.id\n      )\n      .join((enter) =>\n        enter\n          .append('path')\n          .attr('d', path)\n          .attr('fill', 'none')\n          .attr('stroke-width', width / 250)\n      )\n      .transition(t)\n      .attr('stroke', '#343a4099');\n\n    // Reset on tapping outside map\n    svg.attr('pointer-events', 'auto').on('click', () => {\n      if (mapMeta.mapType !== MAP_TYPES.STATE) {\n        setRegionHighlighted({\n          state: 'Total',\n        });\n      }\n    });\n  }, [\n    geoDataResponse.data,\n    mapMeta,\n    currentMap,\n    setRegionHighlighted,\n    changeMap,\n    isCountryLoaded,\n    mapScale,\n    statistic,\n    mapData,\n    mapOption,\n  ]);\n\n  const highlightRegionInMap = useCallback(\n    (state, district) => {\n      const svg = d3.select(svgRef.current);\n      if (currentMap.stat === MAP_STATISTICS.HOTSPOTS) {\n        svg\n          .select('.circles')\n          .selectAll('circle')\n          .attr('fill-opacity', (d) => {\n            const highlighted =\n              district &&\n              state === d.properties.st_nm &&\n              (district === d.properties.district ||\n                (district === 'Unknown' && !d.properties.district));\n            return highlighted ? 1 : 0.5;\n          });\n      } else {\n        svg\n          .select('.regions')\n          .selectAll('path')\n          .each(function (d) {\n            const highlighted =\n              district === d.properties?.district &&\n              state === d.properties.st_nm;\n            if (highlighted) this.parentNode.appendChild(this);\n            d3.select(this).attr('stroke-opacity', highlighted ? 1 : 0);\n          });\n      }\n    },\n    [currentMap.stat]\n  );\n\n  useEffect(() => {\n    if (!geoDataResponse.data) return;\n    highlightRegionInMap(regionHighlighted.state, regionHighlighted.district);\n  }, [\n    geoDataResponse.data,\n    highlightRegionInMap,\n    regionHighlighted.state,\n    regionHighlighted.district,\n    mapOption,\n  ]);\n\n  return (\n    <React.Fragment>\n      <div className=\"svg-parent fadeInUp\" style={{animationDelay: '2.5s'}}>\n        <svg id=\"chart\" preserveAspectRatio=\"xMidYMid meet\" ref={svgRef}>\n          <g className=\"regions\" />\n          <g className=\"state-borders\" />\n          {currentMap.view === MAP_VIEWS.DISTRICTS && (\n            <g className=\"district-borders\" />\n          )}\n          {currentMap.stat === MAP_STATISTICS.HOTSPOTS && (\n            <g className=\"circles\" />\n          )}\n        </svg>\n        {mapMeta.mapType === MAP_TYPES.STATE &&\n        mapData[currentMap.name]?.Unknown &&\n        mapData[currentMap.name]?.Unknown[mapOption] ? (\n          <div className=\"disclaimer\">\n            <Icon.AlertCircle />\n            {t('District-wise {{mapOption}} numbers are under reconciliation', {\n              mapOption: t(mapOption),\n            })}\n          </div>\n        ) : (\n          ''\n        )}\n      </div>\n\n      {mapScale && (\n        <MapLegend\n          mapScale={mapScale}\n          statistic={statistic}\n          mapStatistic={currentMap.stat}\n          mapOption={mapOption}\n        />\n      )}\n\n      <svg style={{position: 'absolute', height: 0}}>\n        <defs>\n          <filter id=\"balance-color\" colorInterpolationFilters=\"sRGB\">\n            <feColorMatrix\n              type=\"matrix\"\n              values=\"0.91372549  0           0            0  0.08627451\n                      0           0.91372549  0            0  0.08627451\n                      0           0           0.854901961  0  0.145098039\n                      0           0           0            1  0\"\n            />\n          </filter>\n        </defs>\n      </svg>\n    </React.Fragment>\n  );\n}\n\nexport default ChoroplethMap;\n","import ChoroplethMap from './choropleth';\nimport {testedToolTip} from './tooltips';\n\nimport {\n  MAP_META,\n  MAP_STATISTICS,\n  MAP_TYPES,\n  MAP_VIEWS,\n  STATE_CODES_REVERSE,\n  STATE_POPULATIONS,\n} from '../constants';\nimport {\n  formatDate,\n  formatNumber,\n  formatDayMonth,\n  formatLastUpdated,\n} from '../utils/commonfunctions';\n\nimport {parse} from 'date-fns';\nimport equal from 'fast-deep-equal';\nimport React, {useState, useEffect, useMemo, useCallback} from 'react';\nimport ReactDOM from 'react-dom';\nimport * as Icon from 'react-feather';\nimport {useTranslation} from 'react-i18next';\nimport {Link} from 'react-router-dom';\n\nconst isEqual = (prevProps, currProps) => {\n  if (!equal(prevProps.regionHighlighted, currProps.regionHighlighted)) {\n    return false;\n  }\n  if (!equal(prevProps.mapOption, currProps.mapOption)) {\n    return false;\n  }\n  if (!equal(prevProps.anchor, currProps.anchor)) {\n    return false;\n  }\n  return true;\n};\n\nconst getRegionFromState = (state) => {\n  if (!state) return;\n  const region = {...state};\n  return region;\n};\n\nconst getRegionFromDistrict = (districtData, name) => {\n  if (!districtData) return;\n  const region = {...districtData};\n  return region;\n};\n\nfunction MapExplorer({\n  mapName,\n  states,\n  districts,\n  zones,\n  stateTestData,\n  regionHighlighted,\n  setRegionHighlighted,\n  anchor,\n  setAnchor,\n  mapOption,\n  setMapOption,\n  isCountryLoaded = true,\n}) {\n  const {t} = useTranslation();\n  const [currentMap, setCurrentMap] = useState({\n    name: mapName,\n    stat: MAP_STATISTICS.TOTAL,\n    view:\n      MAP_META[mapName].mapType === MAP_TYPES.COUNTRY\n        ? MAP_VIEWS.STATES\n        : MAP_VIEWS.DISTRICTS,\n  });\n  const currentMapMeta = MAP_META[currentMap.name];\n\n  const [statistic, currentMapData] = useMemo(() => {\n    let currentMapData = {};\n    let statistic = {};\n    if (currentMap.stat === MAP_STATISTICS.ZONE) {\n      const dataTypes = ['Red', 'Orange', 'Green'];\n      statistic = dataTypes.reduce((acc, dtype) => {\n        acc[dtype] = 0;\n        return acc;\n      }, {});\n      if (currentMapMeta.mapType === MAP_TYPES.COUNTRY) {\n        currentMapData = Object.keys(zones).reduce((acc1, state) => {\n          acc1[state] = Object.keys(zones[state]).reduce((acc2, district) => {\n            const zone = zones[state][district].zone;\n            if (zone) {\n              acc2[district] = zone;\n              statistic[zone] += 1;\n            }\n            return acc2;\n          }, {});\n          return acc1;\n        }, {});\n      } else if (currentMapMeta.mapType === MAP_TYPES.STATE) {\n        const state = currentMap.name;\n        currentMapData[state] = Object.keys(zones[state]).reduce(\n          (acc, district) => {\n            const zone = zones[state][district].zone;\n            if (zone) {\n              acc[district] = zone;\n              statistic[zone] += 1;\n            }\n            return acc;\n          },\n          {}\n        );\n      }\n    } else {\n      const dataTypes = ['confirmed', 'active', 'recovered', 'deceased'];\n      statistic = dataTypes.reduce((acc, dtype) => {\n        acc[dtype] = {total: 0, max: 0};\n        return acc;\n      }, {});\n      if (currentMapMeta.mapType === MAP_TYPES.COUNTRY) {\n        if (currentMap.view === MAP_VIEWS.STATES) {\n          currentMapData = states.reduce((acc, state) => {\n            acc[state.state] = {};\n            dataTypes.forEach((dtype) => {\n              let typeCount =\n                parseInt(state[dtype !== 'deceased' ? dtype : 'deaths']) || 0;\n              if (currentMap.stat === MAP_STATISTICS.PER_MILLION)\n                typeCount = (1e6 * typeCount) / STATE_POPULATIONS[state.state];\n              if (state.state !== 'Total') {\n                statistic[dtype].total += typeCount;\n                if (typeCount > statistic[dtype].max) {\n                  statistic[dtype].max = typeCount;\n                }\n              }\n              acc[state.state][dtype] = typeCount;\n            });\n            return acc;\n          }, {});\n        } else {\n          currentMapData = Object.keys(districts).reduce((acc1, state) => {\n            const districtWiseData = (districts[state] || {districtData: {}})\n              .districtData;\n            acc1[state] = Object.keys(districtWiseData).reduce(\n              (acc2, district) => {\n                acc2[district] = {};\n                dataTypes.forEach((dtype) => {\n                  const typeCount = parseInt(districtWiseData[district][dtype]);\n                  statistic[dtype].total += typeCount;\n                  if (typeCount > statistic[dtype].max) {\n                    statistic[dtype].max = typeCount;\n                  }\n                  acc2[district][dtype] = typeCount;\n                });\n                return acc2;\n              },\n              {}\n            );\n            return acc1;\n          }, {});\n        }\n      } else if (currentMapMeta.mapType === MAP_TYPES.STATE) {\n        const districtWiseData = (\n          districts[currentMap.name] || {districtData: {}}\n        ).districtData;\n        currentMapData[currentMap.name] = Object.keys(districtWiseData).reduce(\n          (acc, district) => {\n            acc[district] = {};\n            dataTypes.forEach((dtype) => {\n              const typeCount = parseInt(districtWiseData[district][dtype]);\n              statistic[dtype].total += typeCount;\n              if (typeCount > statistic[dtype].max) {\n                statistic[dtype].max = typeCount;\n              }\n              acc[district][dtype] = typeCount;\n            });\n            return acc;\n          },\n          {}\n        );\n        currentMapData[currentMap.name].Total = {};\n        const stateData = states.find(\n          (state) => currentMap.name === state.state\n        );\n        dataTypes.forEach((dtype) => {\n          currentMapData[currentMap.name].Total[dtype] =\n            parseInt(stateData[dtype !== 'deceased' ? dtype : 'deaths']) || 0;\n        });\n      }\n    }\n    return [statistic, currentMapData];\n  }, [currentMap, currentMapMeta.mapType, districts, zones, states]);\n\n  const [hoveredRegion, panelRegion] = useMemo(() => {\n    if (!regionHighlighted.district) {\n      const state = getRegionFromState(\n        states.find((state) => regionHighlighted.state === state.state)\n      );\n      return [state, state];\n    } else {\n      const stateDistrictObj = districts[regionHighlighted.state] || {\n        districtData: {},\n      };\n      const districtData = stateDistrictObj.districtData[\n        regionHighlighted.district\n      ] || {\n        confirmed: 0,\n        active: 0,\n        recovered: 0,\n        deaths: 0,\n      };\n      const district = getRegionFromDistrict(\n        districtData,\n        regionHighlighted.district\n      );\n      let state = getRegionFromState(\n        states.find((state) => state.state === regionHighlighted.state)\n      );\n      district.district = regionHighlighted.district;\n      district.state = state.state;\n      if (currentMapMeta.mapType === MAP_TYPES.COUNTRY)\n        state = states.find((state) => state.state === 'Total');\n      return [district, state];\n    }\n  }, [\n    states,\n    districts,\n    currentMapMeta.mapType,\n    regionHighlighted.state,\n    regionHighlighted.district,\n  ]);\n\n  useEffect(() => {\n    if (regionHighlighted.district) {\n      if (\n        currentMap.name !== regionHighlighted.state &&\n        !(\n          currentMapMeta.mapType === MAP_TYPES.COUNTRY &&\n          currentMap.view === MAP_VIEWS.DISTRICTS\n        )\n      ) {\n        const state = regionHighlighted.state;\n        const newMapMeta = MAP_META[state];\n        if (!newMapMeta) {\n          return;\n        }\n        setCurrentMap({\n          name: state,\n          view: MAP_VIEWS.DISTRICTS,\n          stat:\n            currentMap.stat === MAP_STATISTICS.PER_MILLION\n              ? MAP_STATISTICS.TOTAL\n              : currentMap.stat,\n        });\n      }\n    } else if (isCountryLoaded && currentMapMeta.mapType === MAP_TYPES.STATE) {\n      setCurrentMap({\n        name: 'India',\n        view:\n          currentMap.stat === MAP_STATISTICS.ZONE\n            ? MAP_VIEWS.DISTRICTS\n            : MAP_VIEWS.STATES,\n        stat: currentMap.stat,\n      });\n    }\n  }, [\n    isCountryLoaded,\n    regionHighlighted.state,\n    regionHighlighted.district,\n    currentMap,\n    currentMapMeta.mapType,\n  ]);\n\n  const switchMapToState = useCallback(\n    (state) => {\n      const newMapMeta = MAP_META[state];\n      if (!newMapMeta) {\n        return;\n      }\n      if (newMapMeta.mapType === MAP_TYPES.STATE) {\n        const {districtData} = districts[state] || {\n          districtData: {},\n        };\n        const topDistrict = Object.keys(districtData)\n          .filter((state) => state !== 'Unknown')\n          .sort((a, b) => {\n            return districtData[b].confirmed - districtData[a].confirmed;\n          })[0];\n        ReactDOM.unstable_batchedUpdates(() => {\n          setRegionHighlighted({\n            district: topDistrict,\n            state: state,\n          });\n          setCurrentMap({\n            name: state,\n            view: MAP_VIEWS.DISTRICTS,\n            stat:\n              currentMap.stat === MAP_STATISTICS.PER_MILLION\n                ? MAP_STATISTICS.TOTAL\n                : currentMap.stat,\n          });\n        });\n      } else {\n        ReactDOM.unstable_batchedUpdates(() => {\n          setCurrentMap({\n            name: 'India',\n            view:\n              currentMap.stat === MAP_STATISTICS.ZONE\n                ? MAP_VIEWS.DISTRICTS\n                : MAP_VIEWS.STATES,\n            stat: currentMap.stat,\n          });\n          setRegionHighlighted({\n            state: 'Total',\n          });\n        });\n      }\n    },\n    [currentMap.stat, districts, setRegionHighlighted]\n  );\n\n  const testObj = stateTestData[panelRegion.state];\n\n  let hoveredRegionCount;\n  let hoveredRegionZone;\n  if (currentMap.stat !== MAP_STATISTICS.ZONE) {\n    const data =\n      hoveredRegion.district && currentMapData[hoveredRegion.state]\n        ? currentMapData[hoveredRegion.state][hoveredRegion.district]\n        : hoveredRegion.state !== currentMap.name\n        ? currentMapData[hoveredRegion.state]\n        : currentMapData[hoveredRegion.state].Total;\n    hoveredRegionCount = data\n      ? currentMap.stat === MAP_STATISTICS.PER_MILLION\n        ? Number(parseFloat(data[mapOption]).toFixed(2))\n        : data[mapOption]\n      : 0;\n  } else {\n    hoveredRegionZone =\n      zones[hoveredRegion.state] &&\n      zones[hoveredRegion.state][hoveredRegion.district]\n        ? zones[hoveredRegion.state][hoveredRegion.district].zone\n        : '';\n  }\n\n  return (\n    <div\n      className={`MapExplorer fadeInUp ${\n        anchor === 'mapexplorer' ? 'stickied' : ''\n      }`}\n      style={{\n        animationDelay: '1.5s',\n        display: anchor === 'timeseries' ? 'none' : '',\n      }}\n    >\n      {window.innerWidth > 769 && (\n        <div\n          className={`anchor ${anchor === 'mapexplorer' ? 'stickied' : ''}`}\n          onClick={() => {\n            setAnchor(anchor === 'mapexplorer' ? null : 'mapexplorer');\n          }}\n        >\n          <Icon.Anchor />\n        </div>\n      )}\n      <div className=\"header\">\n        <h1>\n          {t(currentMap.name)} {t('Map')}\n        </h1>\n        <h6>\n          {t('{{action}} over a {{mapType}} for more details', {\n            action: t(window.innerWidth <= 769 ? 'Tap' : 'Hover'),\n            mapType: t(\n              currentMapMeta.mapType === MAP_TYPES.COUNTRY\n                ? 'state/UT'\n                : 'District'\n            ),\n          })}\n        </h6>\n      </div>\n\n      <div className=\"map-stats\">\n        <div\n          className={`stats fadeInUp ${\n            mapOption === 'confirmed' ? 'focused' : ''\n          }`}\n          style={{animationDelay: '2s'}}\n          onClick={() => setMapOption('confirmed')}\n        >\n          <h5>{window.innerWidth <= 769 ? t('Cnfmd') : t('Confirmed')}</h5>\n          <div className=\"stats-bottom\">\n            <h1>{formatNumber(panelRegion.confirmed)}</h1>\n            <h6>{`+${formatNumber(panelRegion.deltaconfirmed)}`}</h6>\n          </div>\n        </div>\n\n        <div\n          className={`stats is-blue fadeInUp ${\n            mapOption === 'active' ? 'focused' : ''\n          }`}\n          style={{animationDelay: '2.1s'}}\n          onClick={() => setMapOption('active')}\n        >\n          <h5>{window.innerWidth <= 769 ? t('Actv') : t('Active')}</h5>\n          <div className=\"stats-bottom\">\n            <h1>{formatNumber(panelRegion.active)}</h1>\n            <h6>{` `}</h6>\n          </div>\n        </div>\n\n        <div\n          className={`stats is-green fadeInUp ${\n            mapOption === 'recovered' ? 'focused' : ''\n          }`}\n          style={{animationDelay: '2.2s'}}\n          onClick={() => setMapOption('recovered')}\n        >\n          <h5>{window.innerWidth <= 769 ? t('Rcvrd') : t('Recovered')}</h5>\n          <div className=\"stats-bottom\">\n            <h1>{formatNumber(panelRegion.recovered)}</h1>\n            <h6>{`+${formatNumber(panelRegion.deltarecovered)}`}</h6>\n          </div>\n        </div>\n\n        <div\n          className={`stats is-gray fadeInUp ${\n            mapOption === 'deceased' ? 'focused' : ''\n          }`}\n          style={{animationDelay: '2.3s'}}\n          onClick={() => setMapOption('deceased')}\n        >\n          <h5>{window.innerWidth <= 769 ? t('Dcsd') : t('Deceased')}</h5>\n          <div className=\"stats-bottom\">\n            <h1>{formatNumber(panelRegion.deaths)}</h1>\n            <h6>{`+${formatNumber(panelRegion.deltadeaths)}`}</h6>\n          </div>\n        </div>\n\n        <div\n          className=\"stats is-purple tested fadeInUp\"\n          style={{animationDelay: '2.4s'}}\n        >\n          <h5>{t('Tested')}</h5>\n          <div className=\"stats-bottom\">\n            <h1>{formatNumber(testObj?.totaltested)}</h1>\n          </div>\n          <h6 className=\"timestamp\">\n            {!isNaN(parse(testObj?.updatedon, 'dd/MM/yyyy', new Date()))\n              ? t('As of {{date}}', {\n                  date: formatDayMonth(testObj?.updatedon),\n                })\n              : ''}\n          </h6>\n          {testObj?.totaltested?.length > 1 && (\n            <a href={testObj.source} target=\"_noblank\">\n              <Icon.Link />\n            </a>\n          )}\n          {panelRegion.state === 'Total' ? testedToolTip : ''}\n        </div>\n      </div>\n\n      <div className=\"meta fadeInUp\" style={{animationDelay: '2.4s'}}>\n        <h2\n          className={`${\n            currentMap.stat !== MAP_STATISTICS.ZONE\n              ? mapOption !== 'confirmed'\n                ? mapOption\n                : ''\n              : hoveredRegionZone\n          }`}\n        >\n          {hoveredRegion.district\n            ? t(hoveredRegion.district) +\n              (hoveredRegion.district === 'Unknown'\n                ? ` (${t(hoveredRegion.state)})`\n                : '')\n            : t(hoveredRegion.state)}\n        </h2>\n\n        {currentMapMeta.mapType !== MAP_TYPES.STATE &&\n          panelRegion.lastupdatedtime && (\n            <div className=\"last-update\">\n              <h6>{t('Last updated')}</h6>\n              <h3>\n                {isNaN(Date.parse(formatDate(panelRegion.lastupdatedtime)))\n                  ? ''\n                  : formatLastUpdated(panelRegion.lastupdatedtime) +\n                    ' ' +\n                    t('ago')}\n              </h3>\n            </div>\n          )}\n\n        {currentMapMeta.mapType === MAP_TYPES.STATE ? (\n          <Link to={`state/${STATE_CODES_REVERSE[panelRegion.state]}`}>\n            <div className=\"button state-page-button\">\n              <abbr>{t('Visit state page')}</abbr>\n              <Icon.ArrowRightCircle />\n            </div>\n          </Link>\n        ) : null}\n\n        {currentMap.stat !== MAP_STATISTICS.ZONE &&\n        (currentMapMeta.mapType === MAP_TYPES.STATE ||\n          (currentMapMeta.mapType === MAP_TYPES.COUNTRY &&\n            currentMap.stat !== MAP_STATISTICS.TOTAL)) &&\n        (currentMap.stat !== MAP_STATISTICS.HOTSPOTS ||\n          hoveredRegion?.district) ? (\n          <h1\n            className={`district ${mapOption !== 'confirmed' ? mapOption : ''}`}\n          >\n            {hoveredRegionCount}\n            <br />\n            <span>\n              {t(mapOption)}{' '}\n              {currentMap.stat === MAP_STATISTICS.PER_MILLION\n                ? ` ${t('per million')}`\n                : ''}\n            </span>\n          </h1>\n        ) : null}\n\n        {currentMapMeta.mapType === MAP_TYPES.STATE ? (\n          <div\n            className=\"button back-button\"\n            onClick={() => switchMapToState('India')}\n          >\n            {t('Back')}\n          </div>\n        ) : null}\n\n        {currentMapMeta.mapType === MAP_TYPES.STATE &&\n        currentMapData.Unknown &&\n        currentMapData.Unknown[mapOption] > 0 ? (\n          <h4 className=\"unknown\">\n            {t('Districts unknown for')} {currentMapData.Unknown[mapOption]}{' '}\n            {t('people')}\n          </h4>\n        ) : null}\n      </div>\n\n      <div>\n        {mapOption && (\n          <ChoroplethMap\n            statistic={statistic}\n            currentMap={currentMap}\n            mapData={currentMapData}\n            regionHighlighted={regionHighlighted}\n            setRegionHighlighted={setRegionHighlighted}\n            changeMap={switchMapToState}\n            mapOption={mapOption}\n            isCountryLoaded={isCountryLoaded}\n          />\n        )}\n      </div>\n\n      <div className=\"tabs-map\">\n        <div\n          className={`tab ${\n            currentMap.stat === MAP_STATISTICS.TOTAL ? 'focused' : ''\n          }`}\n          onClick={() => {\n            setCurrentMap({\n              name: currentMap.name,\n              view:\n                currentMapMeta.mapType === MAP_TYPES.COUNTRY\n                  ? MAP_VIEWS.STATES\n                  : MAP_VIEWS.DISTRICTS,\n              stat: MAP_STATISTICS.TOTAL,\n            });\n            if (currentMapMeta.mapType === MAP_TYPES.COUNTRY)\n              setRegionHighlighted({\n                state: regionHighlighted.state,\n              });\n          }}\n        >\n          <h4>{t('Total Cases')}</h4>\n        </div>\n        {isCountryLoaded && (\n          <div\n            className={`tab ${\n              currentMap.stat === MAP_STATISTICS.PER_MILLION ? 'focused' : ''\n            }`}\n            onClick={() => {\n              if (currentMapMeta.mapType === MAP_TYPES.STATE) return;\n              setCurrentMap({\n                name: currentMap.name,\n                view: MAP_VIEWS.STATES,\n                stat: MAP_STATISTICS.PER_MILLION,\n              });\n              setRegionHighlighted({\n                state: regionHighlighted.state,\n              });\n            }}\n          >\n            <h4>\n              {t('Cases per million')}\n              <sup>&dagger;</sup>\n            </h4>\n          </div>\n        )}\n        {isCountryLoaded && (\n          <div\n            className={`tab ${\n              currentMap.stat === MAP_STATISTICS.HOTSPOTS ? 'focused' : ''\n            }`}\n            onClick={() => {\n              if (currentMapMeta.mapType === MAP_TYPES.STATE) return;\n              setCurrentMap({\n                name: currentMap.name,\n                view: MAP_VIEWS.DISTRICTS,\n                stat: MAP_STATISTICS.HOTSPOTS,\n              });\n            }}\n          >\n            <h4>{t('Hotspots')}</h4>\n          </div>\n        )}\n        <div\n          className={`tab ${\n            currentMap.stat === MAP_STATISTICS.ZONE ? 'focused' : ''\n          }`}\n          onClick={() => {\n            setCurrentMap({\n              name: currentMap.name,\n              view: MAP_VIEWS.DISTRICTS,\n              stat: MAP_STATISTICS.ZONE,\n            });\n            if (currentMapMeta.mapType === MAP_TYPES.COUNTRY)\n              setRegionHighlighted({\n                state: 'Total',\n              });\n          }}\n        >\n          <h4>{t('Zones')}</h4>\n        </div>\n      </div>\n\n      <h6 className=\"footnote table-fineprint\">\n        &dagger; {t('Based on 2019 population projection by NCP') + ' ('}\n        <a\n          href=\"https://nhm.gov.in/New_Updates_2018/Report_Population_Projection_2019.pdf\"\n          target=\"_noblank\"\n          style={{color: '#6c757d'}}\n        >\n          {t('source')}\n        </a>\n        )\n      </h6>\n    </div>\n  );\n}\n\nexport default React.memo(MapExplorer, isEqual);\n","import {testedToolTip} from './tooltips';\n\nimport {\n  sliceTimeseriesFromEnd,\n  formatNumber,\n  formatTimeseriesDate,\n  formatTimeseriesTickX,\n} from '../utils/commonfunctions';\nimport {useResizeObserver} from '../utils/hooks';\n\nimport * as d3 from 'd3';\nimport {addDays, subDays} from 'date-fns';\nimport equal from 'fast-deep-equal';\nimport React, {useState, useEffect, useRef, useCallback} from 'react';\nimport {useTranslation} from 'react-i18next';\n\nconst isEqual = (prevProps, currProps) => {\n  if (!currProps.isIntersecting) return true;\n  if (!prevProps.isIntersecting) return false;\n  if (!equal(currProps.chartType, prevProps.chartType)) {\n    return false;\n  }\n  if (!equal(currProps.mode, prevProps.mode)) {\n    return false;\n  }\n  if (!equal(currProps.logMode, prevProps.logMode)) {\n    return false;\n  }\n  if (!equal(currProps.stateCode, prevProps.stateCode)) {\n    return false;\n  }\n  return true;\n};\n\nfunction TimeSeries({timeseriesProp, chartType, mode, logMode, stateCode}) {\n  const {t} = useTranslation();\n  const [lastDaysCount, setLastDaysCount] = useState(\n    window.innerWidth > 512 ? Infinity : 30\n  );\n  const [timeseries, setTimeseries] = useState({});\n  const [datapoint, setDatapoint] = useState({});\n  const [index, setIndex] = useState(0);\n  const [moving, setMoving] = useState(false);\n\n  const svgRef1 = useRef();\n  const svgRef2 = useRef();\n  const svgRef3 = useRef();\n  const svgRef4 = useRef();\n  const svgRef5 = useRef();\n\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n\n  const transformTimeSeries = useCallback(\n    (timeseries) => {\n      if (timeseries.length > 1) {\n        const slicedTimeseries = sliceTimeseriesFromEnd(\n          timeseries,\n          lastDaysCount\n        );\n        setIndex(slicedTimeseries.length - 1);\n        setTimeseries(slicedTimeseries);\n      }\n    },\n    [lastDaysCount]\n  );\n\n  useEffect(() => {\n    transformTimeSeries(timeseriesProp);\n  }, [lastDaysCount, timeseriesProp, transformTimeSeries]);\n\n  const graphData = useCallback(\n    (timeseries) => {\n      const {width, height} =\n        dimensions || wrapperRef.current.getBoundingClientRect();\n\n      // Margins\n      const margin = {top: 15, right: 35, bottom: 25, left: 25};\n      const chartRight = width - margin.right;\n      const chartBottom = height - margin.bottom;\n\n      const T = timeseries.length;\n      const yBufferTop = 1.2;\n      const yBufferBottom = 1.1;\n\n      setDatapoint(timeseries[T - 1]);\n      setIndex(T - 1);\n\n      const svg1 = d3.select(svgRef1.current);\n      const svg2 = d3.select(svgRef2.current);\n      const svg3 = d3.select(svgRef3.current);\n      const svg4 = d3.select(svgRef4.current);\n      const svg5 = d3.select(svgRef5.current);\n\n      const dateMin = subDays(timeseries[0].date, 1);\n      const dateMax = addDays(timeseries[T - 1].date, 1);\n\n      const xScale = d3\n        .scaleTime()\n        .clamp(true)\n        .domain([dateMin, dateMax])\n        .range([margin.left, chartRight]);\n\n      // Number of x-axis ticks\n      const numTicksX = width < 480 ? 4 : 7;\n\n      const xAxis = (g) =>\n        g.attr('class', 'x-axis').call(\n          d3\n            .axisBottom(xScale)\n            .ticks(numTicksX)\n            .tickFormat((tick) => {\n              return formatTimeseriesTickX(tick);\n            })\n        );\n\n      const xAxis2 = (g, yScale) => {\n        g.attr('class', 'x-axis2')\n          .call(d3.axisBottom(xScale).tickValues([]).tickSize(0))\n          .select('.domain')\n          .style('transform', `translateY(${yScale(0)}px)`);\n\n        if (yScale(0) !== chartBottom) g.select('.domain').attr('opacity', 0.4);\n        else g.select('.domain').attr('opacity', 0);\n      };\n\n      const yAxis = (g, yScale) =>\n        g\n          .attr('class', 'y-axis')\n          .call(d3.axisRight(yScale).ticks(4, '0~s').tickPadding(4));\n\n      // Arrays of objects\n      const plotTotal = chartType === 1;\n      const dataTypesTotal = [\n        'totalconfirmed',\n        'totalactive',\n        'totalrecovered',\n        'totaldeceased',\n        'totaltested',\n      ];\n      const dataTypesDaily = [\n        'dailyconfirmed',\n        'dailyactive',\n        'dailyrecovered',\n        'dailydeceased',\n        'dailytested',\n      ];\n\n      const colors = ['#ff073a', '#007bff', '#28a745', '#6c757d', '#201aa2'];\n\n      const svgArray = [svg1, svg2, svg3, svg4, svg5];\n\n      let yScales;\n      if (plotTotal) {\n        const uniformScaleMin = d3.min(timeseries, (d) =>\n          Math.min(d.totalactive, d.totalrecovered, d.totaldeceased)\n        );\n        const uniformScaleMax = d3.max(timeseries, (d) => d.totalconfirmed);\n        const yScaleUniformLinear = d3\n          .scaleLinear()\n          .clamp(true)\n          .domain([uniformScaleMin, Math.max(1, yBufferTop * uniformScaleMax)])\n          .nice(4)\n          .range([chartBottom, margin.top]);\n\n        const yScaleUniformLog = d3\n          .scaleLog()\n          .clamp(true)\n          .domain([\n            Math.max(1, uniformScaleMin),\n            Math.max(10, yBufferTop * uniformScaleMax),\n          ])\n          .nice(4)\n          .range([chartBottom, margin.top]);\n\n        yScales = dataTypesTotal.map((type) => {\n          const yScaleLinear = d3\n            .scaleLinear()\n            .clamp(true)\n            .domain([\n              d3.min(timeseries, (d) => d[type]),\n              Math.max(1, yBufferTop * d3.max(timeseries, (d) => d[type])),\n            ])\n            .nice(4)\n            .range([chartBottom, margin.top]);\n          const yScaleLog = d3\n            .scaleLog()\n            .clamp(true)\n            .domain([\n              Math.max(\n                1,\n                d3.min(timeseries, (d) => d[type])\n              ),\n              Math.max(10, yBufferTop * d3.max(timeseries, (d) => d[type])),\n            ])\n            .nice(4)\n            .range([chartBottom, margin.top]);\n          if (mode && type !== 'totaltested')\n            return logMode ? yScaleUniformLog : yScaleUniformLinear;\n          else return logMode ? yScaleLog : yScaleLinear;\n        });\n      } else {\n        const yScaleDailyUniform = d3\n          .scaleLinear()\n          .clamp(true)\n          .domain([\n            yBufferBottom *\n              Math.min(\n                0,\n                d3.min(timeseries, (d) => d.dailyactive)\n              ),\n            Math.max(\n              1,\n              yBufferTop *\n                d3.max(timeseries, (d) =>\n                  Math.max(d.dailyconfirmed, d.dailyrecovered, d.dailydeceased)\n                )\n            ),\n          ])\n          .nice(4)\n          .range([chartBottom, margin.top]);\n\n        yScales = dataTypesDaily.map((type) => {\n          if (mode && type !== 'dailytested') return yScaleDailyUniform;\n          const yScaleLinear = d3\n            .scaleLinear()\n            .clamp(true)\n            .domain([\n              yBufferBottom *\n                Math.min(\n                  0,\n                  d3.min(timeseries, (d) => d[type])\n                ),\n              Math.max(1, yBufferTop * d3.max(timeseries, (d) => d[type])),\n            ])\n            .nice(4)\n            .range([chartBottom, margin.top]);\n          return yScaleLinear;\n        });\n      }\n\n      /* Focus dots */\n      const focus = svgArray.map((svg, i) => {\n        return svg\n          .selectAll('.focus')\n          .data([timeseries[T - 1]], (d) => d.date)\n          .join((enter) =>\n            enter.append('circle').attr('cx', (d) => xScale(d.date))\n          )\n          .attr('class', 'focus')\n          .attr('fill', colors[i])\n          .attr('stroke', colors[i])\n          .attr('r', 4);\n      });\n\n      function mousemove() {\n        const xm = d3.mouse(this)[0];\n        const date = xScale.invert(xm);\n        const bisectDate = d3.bisector((d) => d.date).left;\n        let i = bisectDate(timeseries, date, 1);\n        if (0 <= i && i < T) {\n          if (date - timeseries[i - 1].date < timeseries[i].date - date) --i;\n          setDatapoint(timeseries[i]);\n          setIndex(i);\n          setMoving(true);\n          const d = timeseries[i];\n          focus.forEach((f, j) => {\n            const yScale = yScales[j];\n            const type = plotTotal ? dataTypesTotal[j] : dataTypesDaily[j];\n            if (!isNaN(d[type]))\n              f.attr('cx', xScale(d.date))\n                .attr('cy', yScale(d[type]))\n                .attr('opacity', 1);\n            else f.attr('opacity', 0);\n          });\n        }\n      }\n\n      function mouseout() {\n        setDatapoint(timeseries[T - 1]);\n        setIndex(T - 1);\n        setMoving(false);\n        focus.forEach((f, j) => {\n          const yScale = yScales[j];\n          const type = plotTotal ? dataTypesTotal[j] : dataTypesDaily[j];\n          if (!isNaN(timeseries[T - 1][type]))\n            f.attr('cx', xScale(timeseries[T - 1].date))\n              .attr('cy', yScale(timeseries[T - 1][type]))\n              .attr('opacity', 1);\n          else f.attr('opacity', 0);\n        });\n      }\n\n      /* Begin drawing charts */\n      svgArray.forEach((svg, i) => {\n        // Transition interval\n        const t = svg.transition().duration(500);\n        const typeTotal = dataTypesTotal[i];\n        const typeDaily = dataTypesDaily[i];\n        const type = plotTotal ? typeTotal : typeDaily;\n\n        const filteredTimeseries = timeseries.filter((d) => !isNaN(d[type]));\n        const color = colors[i];\n        const yScale = yScales[i];\n\n        /* X axis */\n        svg\n          .select('.x-axis')\n          .style('transform', `translateY(${chartBottom}px)`)\n          .transition(t)\n          .call(xAxis);\n        svg.select('.x-axis2').transition(t).call(xAxis2, yScale);\n        /* Y axis */\n        svg\n          .select('.y-axis')\n          .style('transform', `translateX(${chartRight}px)`)\n          .transition(t)\n          .call(yAxis, yScale);\n\n        /* Path dots */\n        svg\n          .selectAll('.dot')\n          .data(filteredTimeseries, (d) => d.date)\n          .join((enter) =>\n            enter\n              .append('circle')\n              .attr('cy', chartBottom)\n              .attr('cx', (d) => xScale(d.date))\n          )\n          .attr('class', 'dot')\n          .attr('fill', color)\n          .attr('stroke', color)\n          .attr('r', 2)\n          .transition(t)\n          .attr('cx', (d) => xScale(d.date))\n          .attr('cy', (d) => yScale(d[type]));\n\n        if (!isNaN(timeseries[T - 1][type]))\n          focus[i]\n            .transition(t)\n            .attr('cx', (d) => xScale(d.date))\n            .attr('cy', (d) => yScale(d[type]))\n            .attr('opacity', 1);\n        else focus[i].transition(t).attr('opacity', 0);\n\n        if (plotTotal) {\n          /* TOTAL TRENDS */\n          svg.selectAll('.stem').remove();\n          const path = svg\n            .selectAll('.trend')\n            .data([[...filteredTimeseries].reverse()])\n            .join('path')\n            .attr('class', 'trend')\n            .attr('fill', 'none')\n            .attr('stroke', color + '99')\n            .attr('stroke-width', 4);\n          // HACK\n          // Path interpolation is non-trivial. Ideally, a custom path tween\n          // function should be defined which takes care that old path dots\n          // transition synchronously along with the path transition. This hack\n          // simulates that behaviour.\n          if (path.attr('d')) {\n            const n = path.node().getTotalLength();\n            const p = path.node().getPointAtLength(n);\n            // Append points at end of path for better interpolation\n            path.attr(\n              'd',\n              () => path.attr('d') + `L${p.x},${p.y}`.repeat(3 * T)\n            );\n          }\n          path\n            .transition(t)\n            .attr('opacity', plotTotal ? 1 : 0)\n            .attr(\n              'd',\n              d3\n                .line()\n                .x((d) => xScale(d.date))\n                .y((d) => yScale(d[typeTotal]))\n                .curve(d3.curveMonotoneX)\n            );\n        } else {\n          /* DAILY TRENDS */\n          svg.selectAll('.trend').remove();\n          svg\n            .selectAll('.stem')\n            .data(filteredTimeseries, (d) => d.date)\n            .join((enter) =>\n              enter\n                .append('line')\n                .attr('x1', (d) => xScale(d.date))\n                .attr('y1', chartBottom)\n                .attr('x2', (d) => xScale(d.date))\n                .attr('y2', chartBottom)\n            )\n            .attr('class', 'stem')\n            .style('stroke', color + '99')\n            .style('stroke-width', 4)\n            .transition(t)\n            .attr('x1', (d) => xScale(d.date))\n            .attr('y1', yScale(0))\n            .attr('x2', (d) => xScale(d.date))\n            .attr('y2', (d) => yScale(d[typeDaily]));\n        }\n\n        svg\n          .on('mousemove', mousemove)\n          .on('touchmove', mousemove)\n          .on('mouseout', mouseout)\n          .on('touchend', mouseout);\n      });\n    },\n    [chartType, dimensions, logMode, mode]\n  );\n\n  useEffect(() => {\n    if (timeseries.length > 1) {\n      graphData(timeseries);\n    }\n  }, [timeseries, graphData]);\n\n  const dateStr = datapoint.date ? formatTimeseriesDate(datapoint.date) : '';\n\n  const chartKey1 = chartType === 1 ? 'totalconfirmed' : 'dailyconfirmed';\n  const chartKey2 = chartType === 1 ? 'totalactive' : 'dailyactive';\n  const chartKey3 = chartType === 1 ? 'totalrecovered' : 'dailyrecovered';\n  const chartKey4 = chartType === 1 ? 'totaldeceased' : 'dailydeceased';\n  const chartKey5 = chartType === 1 ? 'totaltested' : 'dailytested';\n\n  // Function for calculate increased/decreased count for each type of data\n  const currentStatusCount = (chartType) => {\n    if (timeseries.length <= 0 || index <= 0 || index >= timeseries.length)\n      return '';\n    const currentDiff =\n      timeseries[index][chartType] - timeseries[index - 1][chartType];\n    const formatedDiff = formatNumber(currentDiff);\n    return currentDiff >= 0 ? `+${formatedDiff}` : formatedDiff;\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"TimeSeries fadeInUp\" style={{animationDelay: '2.7s'}}>\n        <div className=\"svg-parent\" ref={wrapperRef}>\n          <div className=\"stats\">\n            <h5 className={`${!moving ? 'title' : ''}`}>{t('Confirmed')}</h5>\n            <h5 className={`${moving ? 'title' : ''}`}>{`${dateStr}`}</h5>\n            <div className=\"stats-bottom\">\n              <h2>{formatNumber(datapoint[chartKey1])}</h2>\n              <h6>{currentStatusCount(chartKey1)}</h6>\n            </div>\n          </div>\n          <svg ref={svgRef1} preserveAspectRatio=\"xMidYMid meet\">\n            <g className=\"x-axis\" />\n            <g className=\"x-axis2\" />\n            <g className=\"y-axis\" />\n          </svg>\n        </div>\n\n        <div className=\"svg-parent is-blue\">\n          <div className=\"stats is-blue\">\n            <h5 className={`${!moving ? 'title' : ''}`}>{t('Active')}</h5>\n            <h5 className={`${moving ? 'title' : ''}`}>{`${dateStr}`}</h5>\n            <div className=\"stats-bottom\">\n              <h2>{formatNumber(datapoint[chartKey2])}</h2>\n              <h6>{currentStatusCount(chartKey2)}</h6>\n            </div>\n          </div>\n          <svg ref={svgRef2} preserveAspectRatio=\"xMidYMid meet\">\n            <g className=\"x-axis\" />\n            <g className=\"x-axis2\" />\n            <g className=\"y-axis\" />\n          </svg>\n        </div>\n\n        <div className=\"svg-parent is-green\">\n          <div className=\"stats is-green\">\n            <h5 className={`${!moving ? 'title' : ''}`}>{t('Recovered')}</h5>\n            <h5 className={`${moving ? 'title' : ''}`}>{`${dateStr}`}</h5>\n            <div className=\"stats-bottom\">\n              <h2>{formatNumber(datapoint[chartKey3])}</h2>\n              <h6>{currentStatusCount(chartKey3)}</h6>\n            </div>\n          </div>\n          <svg ref={svgRef3} preserveAspectRatio=\"xMidYMid meet\">\n            <g className=\"x-axis\" />\n            <g className=\"x-axis2\" />\n            <g className=\"y-axis\" />\n          </svg>\n        </div>\n\n        <div className=\"svg-parent is-gray\">\n          <div className=\"stats is-gray\">\n            <h5 className={`${!moving ? 'title' : ''}`}>{t('Deceased')}</h5>\n            <h5 className={`${moving ? 'title' : ''}`}>{`${dateStr}`}</h5>\n            <div className=\"stats-bottom\">\n              <h2>{formatNumber(datapoint[chartKey4])}</h2>\n              <h6>{currentStatusCount(chartKey4)}</h6>\n            </div>\n          </div>\n          <svg ref={svgRef4} preserveAspectRatio=\"xMidYMid meet\">\n            <g className=\"x-axis\" />\n            <g className=\"x-axis2\" />\n            <g className=\"y-axis\" />\n          </svg>\n        </div>\n\n        <div className=\"svg-parent is-purple\">\n          <div className=\"stats is-purple\">\n            <h5 className={`${!moving ? 'title' : ''}`}>\n              {t('Tested')} {stateCode === 'TT' ? testedToolTip : ''}\n            </h5>\n            <h5 className={`${moving ? 'title' : ''}`}>{`${dateStr}`}</h5>\n            <div className=\"stats-bottom\">\n              <h2>{formatNumber(datapoint[chartKey5])}</h2>\n              <h6>{currentStatusCount(chartKey5)}</h6>\n            </div>\n          </div>\n          <svg ref={svgRef5} preserveAspectRatio=\"xMidYMid meet\">\n            <g className=\"x-axis\" />\n            <g className=\"x-axis2\" />\n            <g className=\"y-axis\" />\n          </svg>\n        </div>\n      </div>\n\n      <div className=\"pills\">\n        <button\n          type=\"button\"\n          onClick={() => setLastDaysCount(Infinity)}\n          className={lastDaysCount === Infinity ? 'selected' : ''}\n        >\n          {t('Beginning')}\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => setLastDaysCount(30)}\n          className={lastDaysCount === 30 ? 'selected' : ''}\n          aria-label=\"1 month\"\n        >\n          {`1 ${t('Month')}`}\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => setLastDaysCount(14)}\n          className={lastDaysCount === 14 ? 'selected' : ''}\n          aria-label=\"14 days\"\n        >\n          {`2 ${t('Weeks')}`}\n        </button>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default React.memo(TimeSeries, isEqual);\n","import TimeSeries from './timeseries';\n\nimport 'intersection-observer';\nimport Observer from '@researchgate/react-intersection-observer';\nimport equal from 'fast-deep-equal';\nimport React, {useState} from 'react';\nimport * as Icon from 'react-feather';\nimport {useTranslation} from 'react-i18next';\nimport {useLocalStorage} from 'react-use';\n\nconst isEqual = (prevProps, currProps) => {\n  if (!equal(currProps.activeStateCode, prevProps.activeStateCode)) {\n    return false;\n  }\n  if (!equal(currProps.anchor, prevProps.anchor)) {\n    return false;\n  }\n  return true;\n};\n\nfunction TimeSeriesExplorer({\n  timeseries,\n  activeStateCode,\n  onHighlightState,\n  states,\n  anchor,\n  setAnchor,\n}) {\n  const [chartType, setChartType] = useLocalStorage('timeseriesChartType', 1);\n  const [isTimeseriesIntersecting, setIsTimeseriesIntersecting] = useState(\n    false\n  );\n\n  const [timeseriesMode, setTimeseriesMode] = useLocalStorage(\n    'timeseriesMode',\n    true\n  );\n  const [timeseriesLogMode, setTimeseriesLogMode] = useLocalStorage(\n    'timeseriesLogMode',\n    false\n  );\n  const {t} = useTranslation();\n\n  const options = {\n    rootMargin: '0px 0px 0px 0px',\n  };\n\n  return (\n    <Observer\n      options={options}\n      onChange={({isIntersecting}) =>\n        setIsTimeseriesIntersecting(isIntersecting)\n      }\n    >\n      <div\n        className={`TimeSeriesExplorer ${\n          anchor === 'timeseries' ? 'stickied' : ''\n        }`}\n        style={{display: anchor === 'mapexplorer' ? 'none' : ''}}\n      >\n        <div\n          className=\"timeseries-header fadeInUp\"\n          style={{animationDelay: '2.5s'}}\n        >\n          {window.innerWidth > 769 && anchor !== undefined && (\n            <div\n              className={`anchor ${anchor === 'timeseries' ? 'stickied' : ''}`}\n              onClick={() => {\n                setAnchor(anchor === 'timeseries' ? null : 'timeseries');\n              }}\n            >\n              <Icon.Anchor />\n            </div>\n          )}\n\n          <h1>{t('Spread Trends')}</h1>\n          <div className=\"tabs\">\n            <div\n              className={`tab ${chartType === 1 ? 'focused' : ''}`}\n              onClick={() => {\n                setChartType(1);\n              }}\n            >\n              <h4>{t('Cumulative')}</h4>\n            </div>\n            <div\n              className={`tab ${chartType === 2 ? 'focused' : ''}`}\n              onClick={() => {\n                setChartType(2);\n              }}\n            >\n              <h4>{t('Daily')}</h4>\n            </div>\n          </div>\n\n          <div className=\"scale-modes\">\n            <label className=\"main\">{t('Scale Modes')}</label>\n            <div className=\"timeseries-mode\">\n              <label htmlFor=\"timeseries-mode\">{t('Uniform')}</label>\n              <input\n                id=\"timeseries-mode\"\n                type=\"checkbox\"\n                checked={timeseriesMode}\n                className=\"switch\"\n                aria-label={t('Checked by default to scale uniformly.')}\n                onChange={(event) => {\n                  setTimeseriesMode(!timeseriesMode);\n                }}\n              />\n            </div>\n            <div\n              className={`timeseries-logmode ${\n                chartType !== 1 ? 'disabled' : ''\n              }`}\n            >\n              <label htmlFor=\"timeseries-logmode\">{t('Logarithmic')}</label>\n              <input\n                id=\"timeseries-logmode\"\n                type=\"checkbox\"\n                checked={chartType === 1 && timeseriesLogMode}\n                className=\"switch\"\n                disabled={chartType !== 1}\n                onChange={(event) => {\n                  setTimeseriesLogMode(!timeseriesLogMode);\n                }}\n              />\n            </div>\n          </div>\n\n          {states && (\n            <div className=\"trends-state-name\">\n              <select\n                value={activeStateCode}\n                onChange={({target}) => {\n                  const selectedState = target.selectedOptions[0].getAttribute(\n                    'statedata'\n                  );\n                  onHighlightState(JSON.parse(selectedState));\n                }}\n              >\n                {states.map((s) => {\n                  return (\n                    <option\n                      value={s.statecode}\n                      key={s.statecode}\n                      statedata={JSON.stringify(s)}\n                    >\n                      {s.statecode === 'TT' ? t('All States') : t(s.state)}\n                    </option>\n                  );\n                })}\n              </select>\n            </div>\n          )}\n        </div>\n\n        {timeseries && (\n          <TimeSeries\n            timeseriesProp={timeseries}\n            chartType={chartType}\n            mode={timeseriesMode}\n            logMode={timeseriesLogMode}\n            stateCode={activeStateCode}\n            isIntersecting={isTimeseriesIntersecting}\n          />\n        )}\n\n        <div className=\"alert\">\n          <Icon.AlertOctagon />\n          <div className=\"alert-right\">\n            {t('Tested chart is independent of uniform scaling')}\n          </div>\n        </div>\n      </div>\n    </Observer>\n  );\n}\n\nexport default React.memo(TimeSeriesExplorer, isEqual);\n"],"sourceRoot":""}